#include <iostream>
#include <fstream>
#include <vector>
#include <string>
using namespace std;

const int MAX = 1000000;

struct Line {
    long long a;
    long long b;
    string name;

    Line(long long _a, long long _b, string name = "") : a(_a), b(_b), name(name) {}
};

struct Point {
    long long x;
    long long y;
    string name;

    Point(long long _x, long long _y, string _name = "") : x(_x), y(_y), name(_name) {}
};


vector<Line> lines(MAX);
vector<Point> points(MAX);

void inputLine(long long a, long long b, ostream& fileToWriteLinesIn) {
    fileToWriteLinesIn << a << "x" << "+" << b << "= y" << "\n";
    Line line(a, b);
    lines.push_back(line);
}

void inputPoint(long long x, long long y, ostream& fileToWritePointsIn) {
    fileToWritePointsIn << "(" << x << "," << y << ")" << "\n";
    Point point(x, y);
    points.push_back(point);
}

void setNameToLine(long long index, const string& _name) {
    if (index < lines.size())
    {
        lines[index].name = _name;
    }

    else
        std::cout << "This is an invalid ID, no such line exists!" << std::endl;
}

void setNameToPoint(long long index, const string& _name) {
    if (index < points.size())
        points[index].name = _name;

    else
        std::cout << "This is an invalid ID, no such point exists!" << std::endl;
}

int main()
{

}
